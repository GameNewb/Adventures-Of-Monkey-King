<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

menu[0] = "Restart";
menu[1] = "Quit";

hspace = 132; //Hspace of each menu
vspace = 48; //Vspace of each menu
mpos = 0; //Cursor

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup event

var mov = 0; //Move mouse cursor
mov -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("A")), 0);
mov += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("D")), 0);
    
if(mov != 0)
{
    mpos += mov; //Add to mouse position
    
    //Wrapper
    if(mpos &lt; 0) 
    {
        mpos = array_length_1d(menu) - 1;
    }
    
    //Greater than array length
    if(mpos &gt; array_length_1d(menu) - 1)
    {
        mpos = 0;
    }
}

//For enter
var push;
push = max
(
    keyboard_check_released(vk_enter), 
    keyboard_check_released(vk_shift), 
    keyboard_check_released(vk_space), 
    0);
    
if(push == 1)
{
    scr_gameover();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the menu

draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
draw_set_font(fnt_menu);
draw_set_color(c_yellow);

var i;
for(i = 0; i &lt; array_length_1d(menu); i++)
{
    text_outline(x + hspace, y+16 + (i * vspace), string(menu[i]), c_yellow, c_black);
}

draw_sprite(sprite_index, 0, x+8, y+mpos * vspace);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
